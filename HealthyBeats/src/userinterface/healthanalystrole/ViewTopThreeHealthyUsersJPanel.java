/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.healthanalystrole;

import business.HelperMethods;
import business.enterprise.Enterprise;
import business.organization.Organization;
import business.useraccount.UserAccount;
import business.workqueue.HealthCheckRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JAHNVI
 */
public class ViewTopThreeHealthyUsersJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Organization organization;
    private UserAccount userAccount;
    
    
    /**
     * Creates new form ViewTopThreeHealthyUsersJPanel
     */
    public ViewTopThreeHealthyUsersJPanel() {
        initComponents();
    }

    public ViewTopThreeHealthyUsersJPanel(JPanel userProcessContainer, Organization organization, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.userAccount = userAccount;
        displayDetails();
    }
    
    public void displayDetails() {
        welcomeNameLbl.setText(welcomeNameLbl.getText().replace("<Name>", userAccount.getPerson().getFirstName() +  " " + userAccount.getPerson().getLastName()));
        getTopThreeHealthyUsers();
    }
    
    public void getTopThreeHealthyUsers() {
        ArrayList<HealthCheckRequest> analystRequests = (ArrayList) userAccount.getWorkQueue().getCompletedRequests();
        
        ArrayList<UserAccount> senders = new ArrayList<>();
        
        for (HealthCheckRequest request : analystRequests) {
            if (!senders.contains(request.getSender())) {
                senders.add(request.getSender());
            }
        }
        
        if (!senders.isEmpty()) {
           Collections.sort(senders, new Comparator<UserAccount>() {
                                            @Override
                                            public int compare(UserAccount  sender1, UserAccount  sender2)
                                            {
                                                float perSender1 = (sender1.getWorkQueue().getCountForUnAffectedResults() * 100)/(sender1.getWorkQueue().getCompletedRequests().size());
                                                float perSender2 = (sender2.getWorkQueue().getCountForUnAffectedResults() * 100)/(sender2.getWorkQueue().getCompletedRequests().size());
                                                
                                                if(perSender1 > perSender2)
                                                    return -1;
                                                else
                                                    return 1;
                                            }
                            });
        
            populateUserTable(senders);
        }
    }
    
    public void populateUserTable(ArrayList<UserAccount> senders) {
        DefaultTableModel dtm = (DefaultTableModel) userDetailTable.getModel();
        dtm.setRowCount(0);
        
        for (UserAccount ua : senders) {
             
            String name = ua.getPerson().getFirstName() + " " + ua.getPerson().getLastName();
            
            Object row[] = new Object[1];
            row[0] = name;
            
            dtm.addRow(row);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLbl = new javax.swing.JLabel();
        welcomeLbl = new javax.swing.JLabel();
        welcomeNameLbl = new javax.swing.JLabel();
        top3UserLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userDetailTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();

        titleLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titleLbl.setText("Health Analyst - View Top 3 Healthy Users");

        welcomeLbl.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        welcomeLbl.setText("Welcome,");

        welcomeNameLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        welcomeNameLbl.setText("<Name>!");

        top3UserLbl.setText("Top Three Healthy Users:");

        userDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userDetailTable);
        if (userDetailTable.getColumnModel().getColumnCount() > 0) {
            userDetailTable.getColumnModel().getColumn(0).setResizable(false);
        }

        backBtn.setText("<<  Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(top3UserLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(346, 346, 346)
                        .addComponent(welcomeLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(welcomeNameLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(backBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(titleLbl)
                .addGap(118, 118, 118))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(titleLbl)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(welcomeLbl)
                    .addComponent(welcomeNameLbl))
                .addGap(59, 59, 59)
                .addComponent(top3UserLbl)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 162, Short.MAX_VALUE)
                .addComponent(backBtn)
                .addGap(33, 33, 33))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JLabel top3UserLbl;
    private javax.swing.JTable userDetailTable;
    private javax.swing.JLabel welcomeLbl;
    private javax.swing.JLabel welcomeNameLbl;
    // End of variables declaration//GEN-END:variables
}
