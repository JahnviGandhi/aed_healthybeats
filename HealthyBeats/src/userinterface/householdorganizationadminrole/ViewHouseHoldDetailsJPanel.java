/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.householdorganizationadminrole;

import business.EcoSystem;
import business.HelperMethods;
import business.household.HouseHold;
import business.organization.HouseHoldOrganization;
import business.person.FamilyMember;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JAHNVI
 */
public class ViewHouseHoldDetailsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private HouseHoldOrganization houseOrg;
    private HouseHold house;
    private ManageHouseHoldJPanel manageHouseHoldPanel;
            
    /**
     * Creates new form ViewHouseHoldDetailsJPanel
     */
    public ViewHouseHoldDetailsJPanel() {
        initComponents();
    }
    
    public ViewHouseHoldDetailsJPanel(JPanel userProcessContainer, EcoSystem system, HouseHoldOrganization houseOrg, HouseHold house, ManageHouseHoldJPanel manageHouseHoldPanel) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.houseOrg = houseOrg;
        this.house = house;
        this.manageHouseHoldPanel = manageHouseHoldPanel;
        displayDetails();
                
    }

    public void displayDetails() {
        houseHoldIdTxt.setText(String.valueOf(house.getHouseHoldId()));
        houseHoldNameTxt.setText(house.getHouseHoldName());
        addressTxt.setText(house.getAddress());
        
        if (house.getHeadOfTheFamily() != 0) {
            headTxt.setText(HelperMethods.getNameForHeadOfTheFamily(house.getHeadOfTheFamily(), house));
        }
        
        populateFamilyMemberTable();
    }
    
    public void populateFamilyMemberTable() {
        DefaultTableModel dtm = (DefaultTableModel) familyMemberTable.getModel();
        dtm.setRowCount(0);
        
        ArrayList<FamilyMember> members = (ArrayList) house.getFamilyMembers().getPersonList();
        
        for (FamilyMember person : members) {
            Object row[] = new Object[4];
            row[0] = person.getPersonId();
            row[1] = person;
            row[2] = person.getLastName();
            row[3] = person.getDob();
            
            dtm.addRow(row);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLbl = new javax.swing.JLabel();
        houseHoldNameLbl = new javax.swing.JLabel();
        houseHoldNameTxt = new javax.swing.JTextField();
        houseHoldIdLbl = new javax.swing.JLabel();
        houseHoldIdTxt = new javax.swing.JTextField();
        addressLbl = new javax.swing.JLabel();
        addressTxt = new javax.swing.JTextField();
        headLbl = new javax.swing.JLabel();
        headTxt = new javax.swing.JTextField();
        familyMemLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        familyMemberTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();
        addFamilyMemBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));
        setEnabled(false);
        setPreferredSize(new java.awt.Dimension(740, 670));

        titleLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titleLbl.setForeground(new java.awt.Color(0, 102, 102));
        titleLbl.setText("House Hold Organization Admin - View House Hold Details");

        houseHoldNameLbl.setForeground(new java.awt.Color(0, 102, 102));
        houseHoldNameLbl.setText("House Hold Name:");

        houseHoldNameTxt.setForeground(new java.awt.Color(0, 102, 102));
        houseHoldNameTxt.setEnabled(false);

        houseHoldIdLbl.setForeground(new java.awt.Color(0, 102, 102));
        houseHoldIdLbl.setText("House Hold Id:");

        houseHoldIdTxt.setForeground(new java.awt.Color(0, 102, 102));
        houseHoldIdTxt.setEnabled(false);

        addressLbl.setForeground(new java.awt.Color(0, 102, 102));
        addressLbl.setText("Address:");

        addressTxt.setForeground(new java.awt.Color(0, 102, 102));
        addressTxt.setEnabled(false);

        headLbl.setForeground(new java.awt.Color(0, 102, 102));
        headLbl.setText("Head of The Family:");

        headTxt.setForeground(new java.awt.Color(0, 102, 102));
        headTxt.setEnabled(false);

        familyMemLbl.setForeground(new java.awt.Color(0, 102, 102));
        familyMemLbl.setText("Family Members:");

        jScrollPane1.setForeground(new java.awt.Color(0, 102, 102));

        familyMemberTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "First Name", "Last Name", "Date of Birth"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(familyMemberTable);
        if (familyMemberTable.getColumnModel().getColumnCount() > 0) {
            familyMemberTable.getColumnModel().getColumn(0).setResizable(false);
            familyMemberTable.getColumnModel().getColumn(1).setResizable(false);
            familyMemberTable.getColumnModel().getColumn(2).setResizable(false);
            familyMemberTable.getColumnModel().getColumn(3).setResizable(false);
        }

        backBtn.setBackground(new java.awt.Color(153, 153, 153));
        backBtn.setForeground(new java.awt.Color(0, 102, 102));
        backBtn.setText("<<  Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        addFamilyMemBtn.setBackground(new java.awt.Color(153, 153, 153));
        addFamilyMemBtn.setForeground(new java.awt.Color(0, 102, 102));
        addFamilyMemBtn.setText("Add Family Member");
        addFamilyMemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFamilyMemBtnActionPerformed(evt);
            }
        });

        saveBtn.setBackground(new java.awt.Color(153, 153, 153));
        saveBtn.setForeground(new java.awt.Color(0, 102, 102));
        saveBtn.setText("Save");
        saveBtn.setEnabled(false);
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(153, 153, 153));
        updateBtn.setForeground(new java.awt.Color(0, 102, 102));
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(titleLbl)
                        .addGap(137, 137, 137))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(headLbl)
                            .addComponent(houseHoldIdLbl)
                            .addComponent(houseHoldNameLbl)
                            .addComponent(addressLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(houseHoldNameTxt)
                                .addComponent(houseHoldIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(addressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(headTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(saveBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(updateBtn)))
                        .addGap(207, 207, 207))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addFamilyMemBtn)
                        .addGap(129, 129, 129))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(familyMemLbl)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(backBtn)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(titleLbl)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(houseHoldIdLbl)
                    .addComponent(houseHoldIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(houseHoldNameLbl)
                    .addComponent(houseHoldNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressLbl)
                    .addComponent(addressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(headLbl)
                    .addComponent(headTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn)
                    .addComponent(updateBtn))
                .addGap(49, 49, 49)
                .addComponent(familyMemLbl)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addFamilyMemBtn)
                .addGap(18, 18, 18)
                .addComponent(backBtn)
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        manageHouseHoldPanel.populateHouseHoldTable(houseOrg.getHouseHoldDirectory().getHouseHoldDirectory());
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void addFamilyMemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFamilyMemBtnActionPerformed
        // TODO add your handling code here:
        AddFamilyMemberJPanel addFamilyMemberPanel = new AddFamilyMemberJPanel(userProcessContainer, system, houseOrg, house, this, null);
        userProcessContainer.add("addFamilyMemberPanel", addFamilyMemberPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
                
    }//GEN-LAST:event_addFamilyMemBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
        if (validateInput()) {
            house.setHouseHoldName(houseHoldNameTxt.getText());
            house.setAddress(addressTxt.getText());
      
            JOptionPane.showMessageDialog(null, "House Hold details updated successfully!", "Information", JOptionPane.INFORMATION_MESSAGE);
            
            houseHoldNameTxt.setEnabled(false);
            addressTxt.setEnabled(false);        
            saveBtn.setEnabled(false);
            updateBtn.setEnabled(true);
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        houseHoldNameTxt.setEnabled(true);
        addressTxt.setEnabled(true);
        
        saveBtn.setEnabled(true);
        updateBtn.setEnabled(false);
    }//GEN-LAST:event_updateBtnActionPerformed

    public boolean validateInput() {
        String houseHoldName = houseHoldNameTxt.getText().trim();
        String address = addressTxt.getText().trim();
        
        if (houseHoldName.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter House Hold Name!", "Error", JOptionPane.ERROR_MESSAGE);
            houseHoldNameTxt.requestFocus();
            return false;
        }
        else if (HelperMethods.isHouseNameExisting(houseHoldName, houseOrg.getHouseHoldDirectory())) {
            JOptionPane.showMessageDialog(null, "House hold with the same name already exists!", "Error", JOptionPane.ERROR_MESSAGE);
            houseHoldNameTxt.requestFocus();
            return false;
        }
        else if (address.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter House Hold Address!", "Error", JOptionPane.ERROR_MESSAGE);
            addressTxt.requestFocus();
            return false;
        }
        else {
            return true;
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFamilyMemBtn;
    private javax.swing.JLabel addressLbl;
    private javax.swing.JTextField addressTxt;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel familyMemLbl;
    private javax.swing.JTable familyMemberTable;
    private javax.swing.JLabel headLbl;
    private javax.swing.JTextField headTxt;
    private javax.swing.JLabel houseHoldIdLbl;
    private javax.swing.JTextField houseHoldIdTxt;
    private javax.swing.JLabel houseHoldNameLbl;
    private javax.swing.JTextField houseHoldNameTxt;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
