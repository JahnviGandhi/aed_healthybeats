/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.householdorganizationadminrole;

import business.EcoSystem;
import business.HelperMethods;
import business.household.HouseHold;
import business.organization.HouseHoldOrganization;
import business.person.FamilyMember;
import business.role.UserRole;
import business.sensor.Sensor;
import business.useraccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author JAHNVI
 */
public class AddFamilyMemberJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private HouseHoldOrganization houseOrg;
    private HouseHold house;
    private ViewHouseHoldDetailsJPanel viewHouseHoldDetailsPanel;
    private ManageFamilyMembersJPanel manageFamilyMembersJPanel;
    
    /**
     * Creates new form AddFamilyMemberJPanel
     */
    public AddFamilyMemberJPanel() {
        initComponents();
    }

    public AddFamilyMemberJPanel(JPanel userProcessContainer, EcoSystem system, HouseHoldOrganization houseOrg, HouseHold house, ViewHouseHoldDetailsJPanel viewHouseHoldDetailsPanel, ManageFamilyMembersJPanel manageFamilyMemberPanel) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.houseOrg = houseOrg;
        this.house = house;
        this.viewHouseHoldDetailsPanel = viewHouseHoldDetailsPanel;
        this.manageFamilyMembersJPanel = manageFamilyMemberPanel;
        
        displayDetails();
    }
    
    public void displayDetails() {
        houseHoldIdDisplayLbl.setText(String.valueOf(house.getHouseHoldId()));
        houseHoldNameDisplayLbl.setText(house.getHouseHoldName());
        
        if (house.getHeadOfTheFamily() != 0) {
            headCheckBox.setEnabled(false);
        }
        else {
            headCheckBox.setEnabled(true);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        titleLbl = new javax.swing.JLabel();
        fnameLbl = new javax.swing.JLabel();
        fnameTxt = new javax.swing.JTextField();
        lnameLbl = new javax.swing.JLabel();
        lnameTxt = new javax.swing.JTextField();
        dobLbl = new javax.swing.JLabel();
        dobTxt = new javax.swing.JTextField();
        dobFormatLbl = new javax.swing.JLabel();
        contactLbl = new javax.swing.JLabel();
        contactTxt = new javax.swing.JTextField();
        genderLbl = new javax.swing.JLabel();
        maleRadioBtn = new javax.swing.JRadioButton();
        femaleRadioBtn = new javax.swing.JRadioButton();
        addMemberBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        headCheckBox = new javax.swing.JCheckBox();
        houseHoldId = new javax.swing.JLabel();
        houseHoldIdDisplayLbl = new javax.swing.JLabel();
        houseHoldNameLbl = new javax.swing.JLabel();
        houseHoldNameDisplayLbl = new javax.swing.JLabel();
        unameLbl = new javax.swing.JLabel();
        unameTxt = new javax.swing.JTextField();
        pwdLbl = new javax.swing.JLabel();
        pwdTxt = new javax.swing.JPasswordField();

        setBackground(new java.awt.Color(204, 204, 204));
        setPreferredSize(new java.awt.Dimension(740, 670));

        titleLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titleLbl.setForeground(new java.awt.Color(0, 102, 102));
        titleLbl.setText("House Hold Organization Admin - Add Family Member");

        fnameLbl.setForeground(new java.awt.Color(0, 102, 102));
        fnameLbl.setText("First Name:");

        fnameTxt.setForeground(new java.awt.Color(0, 102, 102));

        lnameLbl.setForeground(new java.awt.Color(0, 102, 102));
        lnameLbl.setText("Last Name:");

        lnameTxt.setForeground(new java.awt.Color(0, 102, 102));

        dobLbl.setForeground(new java.awt.Color(0, 102, 102));
        dobLbl.setText("Date of Birth:");

        dobTxt.setForeground(new java.awt.Color(0, 102, 102));

        dobFormatLbl.setForeground(new java.awt.Color(0, 102, 102));
        dobFormatLbl.setText("(MM/DD/YYYY)");

        contactLbl.setForeground(new java.awt.Color(0, 102, 102));
        contactLbl.setText("Contact No.:");

        contactTxt.setForeground(new java.awt.Color(0, 102, 102));

        genderLbl.setForeground(new java.awt.Color(0, 102, 102));
        genderLbl.setText("Gender:");

        buttonGroup1.add(maleRadioBtn);
        maleRadioBtn.setForeground(new java.awt.Color(0, 102, 102));
        maleRadioBtn.setText("Male");

        buttonGroup1.add(femaleRadioBtn);
        femaleRadioBtn.setForeground(new java.awt.Color(0, 102, 102));
        femaleRadioBtn.setText("Female");

        addMemberBtn.setBackground(new java.awt.Color(153, 153, 153));
        addMemberBtn.setForeground(new java.awt.Color(0, 102, 102));
        addMemberBtn.setText("Add Family Member");
        addMemberBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMemberBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(153, 153, 153));
        backBtn.setForeground(new java.awt.Color(0, 102, 102));
        backBtn.setText("<<  Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        headCheckBox.setForeground(new java.awt.Color(0, 102, 102));
        headCheckBox.setText("Is Head of the Family?");

        houseHoldId.setForeground(new java.awt.Color(0, 102, 102));
        houseHoldId.setText("House Hold Id:");

        houseHoldIdDisplayLbl.setForeground(new java.awt.Color(0, 102, 102));
        houseHoldIdDisplayLbl.setText("<House Hold Id>");

        houseHoldNameLbl.setForeground(new java.awt.Color(0, 102, 102));
        houseHoldNameLbl.setText("House Hold Name:");

        houseHoldNameDisplayLbl.setForeground(new java.awt.Color(0, 102, 102));
        houseHoldNameDisplayLbl.setText("<House Hold Name>");

        unameLbl.setForeground(new java.awt.Color(0, 102, 102));
        unameLbl.setText("User Name:");

        unameTxt.setForeground(new java.awt.Color(0, 102, 102));

        pwdLbl.setForeground(new java.awt.Color(0, 102, 102));
        pwdLbl.setText("Password:");

        pwdTxt.setForeground(new java.awt.Color(0, 102, 102));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(unameLbl)
                            .addComponent(pwdLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(pwdTxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(unameTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(genderLbl)
                            .addComponent(lnameLbl)
                            .addComponent(fnameLbl)
                            .addComponent(dobLbl)
                            .addComponent(contactLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(headCheckBox)
                            .addComponent(femaleRadioBtn)
                            .addComponent(fnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dobTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dobFormatLbl))
                            .addComponent(contactTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(maleRadioBtn))
                        .addGap(29, 29, 29))
                    .addComponent(addMemberBtn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(201, 201, 201))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(titleLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(houseHoldId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(houseHoldIdDisplayLbl)
                        .addGap(38, 38, 38)
                        .addComponent(houseHoldNameLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(houseHoldNameDisplayLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(backBtn)))
                .addGap(160, 160, 160))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(titleLbl)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(houseHoldId)
                    .addComponent(houseHoldIdDisplayLbl)
                    .addComponent(houseHoldNameLbl)
                    .addComponent(houseHoldNameDisplayLbl))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fnameLbl)
                    .addComponent(fnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lnameLbl)
                    .addComponent(lnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dobLbl)
                    .addComponent(dobTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dobFormatLbl))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contactLbl)
                    .addComponent(contactTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genderLbl)
                    .addComponent(maleRadioBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(femaleRadioBtn)
                .addGap(18, 18, 18)
                .addComponent(headCheckBox)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unameLbl)
                    .addComponent(unameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pwdLbl)
                    .addComponent(pwdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(addMemberBtn)
                .addGap(58, 58, 58)
                .addComponent(backBtn)
                .addContainerGap(76, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        if (viewHouseHoldDetailsPanel != null) {
            viewHouseHoldDetailsPanel.populateFamilyMemberTable();
            viewHouseHoldDetailsPanel.displayDetails();
        }
        
        if (manageFamilyMembersJPanel != null) {
            manageFamilyMembersJPanel.populateFamilyMemberTable(house);
        }
        
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void addMemberBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMemberBtnActionPerformed
        // TODO add your handling code here:
        if (validateInput()) {
            FamilyMember member = new FamilyMember();
            member.setFirstName(fnameTxt.getText().trim());
            member.setLastName(lnameTxt.getText().trim());
            member.setDob(dobTxt.getText().trim());
            member.setAge(HelperMethods.calculateAge(dobTxt.getText().trim()));
            member.setContactNo(contactTxt.getText().trim());
            
            if (maleRadioBtn.isSelected()) {
                member.setGender("Male");
            }
            else {
                member.setGender("Female");
            }
            
            member.setHouseHoldId(house.getHouseHoldId());
        
            if (headCheckBox.isSelected()) {
                house.setHeadOfTheFamily(member.getPersonId());
            }
            
            Sensor sensor;
            sensor = member.getSensorDirectory().addSensor();
            sensor.setSensorName(member.getPersonId() + "_" + Sensor.SensorType.FoodConsumption.name());
            sensor.setType(Sensor.SensorType.FoodConsumption);
            
            sensor = member.getSensorDirectory().addSensor();
            sensor.setSensorName(member.getPersonId()+ "_" + Sensor.SensorType.VitalSign.name());
            sensor.setType(Sensor.SensorType.VitalSign);
            
            UserAccount ua = houseOrg.getUserAccountDirectory().createUserAccount(unameTxt.getText().trim(), String.valueOf(pwdTxt.getPassword()),member, new UserRole());
            
            if (ua != null) {
                houseOrg.getPersonDirectory().addPerson(member);
                house.getFamilyMembers().addPerson(member);
                JOptionPane.showMessageDialog(null, "Family member successfully added to the house!", "Information", JOptionPane.INFORMATION_MESSAGE);
                refresh();
            }
        }
    }//GEN-LAST:event_addMemberBtnActionPerformed

    public boolean validateInput() {
        String fname = fnameTxt.getText().trim();
        String lname = lnameTxt.getText().trim();
        String dob = dobTxt.getText().trim();
        String cnum = contactTxt.getText().trim();
        String uname = unameTxt.getText().trim();
        String pwd = String.valueOf(pwdTxt.getPassword());
        
        if (fname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter First Name!", "Error", JOptionPane.ERROR_MESSAGE);
            fnameTxt.requestFocus();
            return false;
        }
        else if (lname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Last Name!", "Error", JOptionPane.ERROR_MESSAGE);
            lnameTxt.requestFocus();
            return false;
        }
        else if (dob.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Date of Birth!", "Error", JOptionPane.ERROR_MESSAGE);
            dobTxt.requestFocus();
            return false;
        }
        else if (!HelperMethods.validateDate(dob)) {
            JOptionPane.showMessageDialog(null, "Please enter valid Date of Birth in MM/DD/YYYY format!", "Error", JOptionPane.ERROR_MESSAGE);
            dobTxt.requestFocus();
            return false;
        }
        else if (cnum.isEmpty() || !(cnum.matches("^[0-9]{10}"))) {
            JOptionPane.showMessageDialog(null, "Please enter 10 digits in Contact No.!", "Error", JOptionPane.ERROR_MESSAGE);
            contactTxt.requestFocus();
            return false;
        }
        else if (!maleRadioBtn.isSelected() && !femaleRadioBtn.isSelected()) {
            JOptionPane.showMessageDialog(null, "Please select Gender!", "Error", JOptionPane.ERROR_MESSAGE);
            maleRadioBtn.requestFocus();
            return false;
        }
        else if (uname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter User Name!", "Error", JOptionPane.ERROR_MESSAGE);
            unameTxt.requestFocus();
            return false;
        }
        else if (HelperMethods.checkIfUserNameExists(uname, system)) {
            JOptionPane.showMessageDialog(null, "Username already exists!", "Error", JOptionPane.ERROR_MESSAGE);
            unameTxt.requestFocus();
            return false;
        }
        else if (pwd.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Password!", "Error", JOptionPane.ERROR_MESSAGE);
            pwdTxt.requestFocus();
            return false;
        }
        else {
            return true;
        }
    }

    public void refresh() {
        fnameTxt.setText("");
        lnameTxt.setText("");
        contactTxt.setText("");
        dobTxt.setText("");
        maleRadioBtn.setSelected(false);
        femaleRadioBtn.setSelected(false);
        headCheckBox.setSelected(false);
        
        if (house.getHeadOfTheFamily() != 0) {
            headCheckBox.setEnabled(false);
        }
        
        unameTxt.setText("");
        pwdTxt.setText("");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMemberBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel contactLbl;
    private javax.swing.JTextField contactTxt;
    private javax.swing.JLabel dobFormatLbl;
    private javax.swing.JLabel dobLbl;
    private javax.swing.JTextField dobTxt;
    private javax.swing.JRadioButton femaleRadioBtn;
    private javax.swing.JLabel fnameLbl;
    private javax.swing.JTextField fnameTxt;
    private javax.swing.JLabel genderLbl;
    private javax.swing.JCheckBox headCheckBox;
    private javax.swing.JLabel houseHoldId;
    private javax.swing.JLabel houseHoldIdDisplayLbl;
    private javax.swing.JLabel houseHoldNameDisplayLbl;
    private javax.swing.JLabel houseHoldNameLbl;
    private javax.swing.JLabel lnameLbl;
    private javax.swing.JTextField lnameTxt;
    private javax.swing.JRadioButton maleRadioBtn;
    private javax.swing.JLabel pwdLbl;
    private javax.swing.JPasswordField pwdTxt;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JLabel unameLbl;
    private javax.swing.JTextField unameTxt;
    // End of variables declaration//GEN-END:variables
}
