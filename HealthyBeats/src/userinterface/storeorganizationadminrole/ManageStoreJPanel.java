/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.storeorganizationadminrole;

import business.HelperMethods;
import business.organization.Organization;
import business.organization.StoreOrganization;
import business.store.Store;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JAHNVI
 */
public class ManageStoreJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Organization organization;
    private StoreOrganization storeOrg; 
    private StoreOrganizationAdminWorkAreaJPanel storeOrgWorkAreaPanel;
    /**
     * Creates new form ManageStoreJPanel
     */
    public ManageStoreJPanel() {
        initComponents();
    }
    
    public ManageStoreJPanel(JPanel userProcessContainer, Organization organization, StoreOrganizationAdminWorkAreaJPanel storeOrgWorkPanel) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        storeOrg = (StoreOrganization) this.organization;
        this.storeOrgWorkAreaPanel = storeOrgWorkPanel;
        populateStoreList(storeOrg.getStoreDirectory().getStoreList());
    }

    public void populateStoreList(ArrayList<Store> storeList) {
        DefaultTableModel dtm = (DefaultTableModel) storeListTable.getModel();
        dtm.setRowCount(0);
        
        for (Store store : storeList) {
            Object row[] = new Object[2];
            row[0] = store.getStoreId();
            row[1] = store;
            
            dtm.addRow(row);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLbl = new javax.swing.JLabel();
        storeListLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        storeListTable = new javax.swing.JTable();
        searchLbl = new javax.swing.JLabel();
        searchTxt = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        deleteStoreBtn = new javax.swing.JButton();
        storeNameLbl = new javax.swing.JLabel();
        storeNameTxt = new javax.swing.JTextField();
        addStoreBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));

        titleLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titleLbl.setForeground(new java.awt.Color(0, 102, 102));
        titleLbl.setText("Store Organization Admin - Manage Store");

        storeListLbl.setForeground(new java.awt.Color(0, 102, 102));
        storeListLbl.setText("Store List:");

        jScrollPane1.setForeground(new java.awt.Color(0, 102, 102));

        storeListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Store Id", "Store Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(storeListTable);
        if (storeListTable.getColumnModel().getColumnCount() > 0) {
            storeListTable.getColumnModel().getColumn(0).setResizable(false);
            storeListTable.getColumnModel().getColumn(1).setResizable(false);
        }

        searchLbl.setForeground(new java.awt.Color(0, 102, 102));
        searchLbl.setText("Enter Store Name to Search:");

        searchTxt.setForeground(new java.awt.Color(0, 102, 102));

        searchBtn.setBackground(new java.awt.Color(153, 153, 153));
        searchBtn.setForeground(new java.awt.Color(0, 102, 102));
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        clearBtn.setBackground(new java.awt.Color(153, 153, 153));
        clearBtn.setForeground(new java.awt.Color(0, 102, 102));
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        deleteStoreBtn.setBackground(new java.awt.Color(153, 153, 153));
        deleteStoreBtn.setForeground(new java.awt.Color(0, 102, 102));
        deleteStoreBtn.setText("Delete Store");
        deleteStoreBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteStoreBtnActionPerformed(evt);
            }
        });

        storeNameLbl.setForeground(new java.awt.Color(0, 102, 102));
        storeNameLbl.setText("Store Name:");

        storeNameTxt.setForeground(new java.awt.Color(0, 102, 102));

        addStoreBtn.setBackground(new java.awt.Color(153, 153, 153));
        addStoreBtn.setForeground(new java.awt.Color(0, 102, 102));
        addStoreBtn.setText("Add Store");
        addStoreBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStoreBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(153, 153, 153));
        backBtn.setForeground(new java.awt.Color(0, 102, 102));
        backBtn.setText("<<  Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(addStoreBtn)
                .addGap(166, 166, 166))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(titleLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(storeListLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(deleteStoreBtn)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clearBtn))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(storeNameLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(storeNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(backBtn)))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(titleLbl)
                .addGap(39, 39, 39)
                .addComponent(storeListLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchLbl)
                    .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn)
                    .addComponent(clearBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteStoreBtn)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(storeNameLbl)
                    .addComponent(storeNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addStoreBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addComponent(backBtn)
                .addGap(32, 32, 32))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        storeOrgWorkAreaPanel.displayDetails();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void addStoreBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStoreBtnActionPerformed
        // TODO add your handling code here:
        if(validateInput()) {
            Store store = storeOrg.getStoreDirectory().createStore();
            store.setStoreName(storeNameTxt.getText().trim());
            
            JOptionPane.showMessageDialog(null, "Store created successfully!", "Information", JOptionPane.INFORMATION_MESSAGE);
            refresh(storeOrg.getStoreDirectory().getStoreList());
        }
    }//GEN-LAST:event_addStoreBtnActionPerformed

    private void deleteStoreBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteStoreBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = storeListTable.getSelectedRow();
        
        if(selectedRow >= 0) {
            int confirmButton = JOptionPane.YES_NO_OPTION;
            
            int confirmDelete = JOptionPane.showConfirmDialog(null, "Would you like to delete selected network?", "Warning", confirmButton);
            
            if (confirmDelete == JOptionPane.YES_OPTION) {
                Store store = (Store) storeListTable.getValueAt(selectedRow, 1);
                storeOrg.getStoreDirectory().removeStore(store);
            
                refresh(storeOrg.getStoreDirectory().getStoreList());
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Please select a row to delete store!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_deleteStoreBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        String searchInput = searchTxt.getText().trim();

        if (!searchInput.isEmpty()) {
            ArrayList<Store> stores = storeOrg.getStoreDirectory().searchStore(searchInput);

            if (stores.size() > 0) {
                populateStoreList(stores);
            }
            else {
                JOptionPane.showMessageDialog(null, "No such store exists!", "Error", JOptionPane.ERROR_MESSAGE);
                refresh(storeOrg.getStoreDirectory().getStoreList());
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Please enter Store Name to perform Search!", "Warning", JOptionPane.WARNING_MESSAGE);
            searchTxt.requestFocus();
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        refresh(storeOrg.getStoreDirectory().getStoreList());
    }//GEN-LAST:event_clearBtnActionPerformed

    public boolean validateInput() {
        String name = storeNameTxt.getText().trim();
        
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Store Name!", "Error", JOptionPane.ERROR_MESSAGE);
            storeNameTxt.requestFocus();
            return false;
        }
        else if (HelperMethods.isStoreExisting(name, storeOrg.getStoreDirectory())) {
            JOptionPane.showMessageDialog(null, "Store with the same name already existing!", "Error", JOptionPane.ERROR_MESSAGE);
            storeNameTxt.requestFocus();
            return false;
        }
        else {
            return true;
        }
    }
    
    public void refresh(ArrayList<Store> storeList) {
        storeNameTxt.setText("");
        searchTxt.setText("");
        
        populateStoreList(storeList);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStoreBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton deleteStoreBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchBtn;
    private javax.swing.JLabel searchLbl;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JLabel storeListLbl;
    private javax.swing.JTable storeListTable;
    private javax.swing.JLabel storeNameLbl;
    private javax.swing.JTextField storeNameTxt;
    private javax.swing.JLabel titleLbl;
    // End of variables declaration//GEN-END:variables
}
