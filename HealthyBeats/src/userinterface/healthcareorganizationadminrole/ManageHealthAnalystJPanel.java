/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.healthcareorganizationadminrole;

import business.EcoSystem;
import business.HelperMethods;
import business.organization.HealthCareOrganization;
import business.organization.Organization;
import business.person.Person;
import business.role.HealthAnalystRole;
import business.useraccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JAHNVI
 */
public class ManageHealthAnalystJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private Organization organization;
    private HealthCareOrganization healthOrg;
    
    /**
     * Creates new form ManageHealthAnalystJPanel
     */
    public ManageHealthAnalystJPanel() {
        initComponents();
    }
    
    public ManageHealthAnalystJPanel(JPanel userProcessContainer, EcoSystem system, Organization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.organization = organization;
        
        this.healthOrg = (HealthCareOrganization) this.organization;
        populateAnalystTable(healthOrg.getUserAccountDirectory().getUserAccountDirectory());
              
    }
    
    public void populateAnalystTable(ArrayList<UserAccount> uaList) {
        DefaultTableModel dtm = (DefaultTableModel) healthAnalystTable.getModel();
        dtm.setRowCount(0);
     
        for (UserAccount ua : uaList) {
            if(ua.getRole() instanceof HealthAnalystRole) {
                Object row[] = new Object[4];
                row[0] = ua.getPerson().getPersonId();
                row[1] = ua.getPerson().getFirstName();
                row[2] = ua.getPerson().getLastName();
                row[3] = ua;
            
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        titleLbl = new javax.swing.JLabel();
        healthAnalysListtLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        healthAnalystTable = new javax.swing.JTable();
        searchLbl = new javax.swing.JLabel();
        searchTxt = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        deleteAnalystBtn = new javax.swing.JButton();
        viewDetailsBtn = new javax.swing.JButton();
        contactNoTxt = new javax.swing.JTextField();
        genderLbl = new javax.swing.JLabel();
        maleRadioBtn = new javax.swing.JRadioButton();
        firstNameLbl = new javax.swing.JLabel();
        firstNameTxt = new javax.swing.JTextField();
        lastNameLbl = new javax.swing.JLabel();
        lastNameTxt = new javax.swing.JTextField();
        usernameLbl = new javax.swing.JLabel();
        usernameTxt = new javax.swing.JTextField();
        contactNoLbl = new javax.swing.JLabel();
        pwdLbl = new javax.swing.JLabel();
        pwdTxt = new javax.swing.JPasswordField();
        femaleRadioBtn = new javax.swing.JRadioButton();
        addAnalystBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));
        setPreferredSize(new java.awt.Dimension(740, 670));

        titleLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titleLbl.setForeground(new java.awt.Color(0, 102, 102));
        titleLbl.setText("Health Care Organization Admin - Manage Health Analyst");

        healthAnalysListtLbl.setForeground(new java.awt.Color(0, 102, 102));
        healthAnalysListtLbl.setText("Health Analyst List:");

        jScrollPane1.setForeground(new java.awt.Color(0, 102, 102));

        healthAnalystTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Analyst Id", "First Name", "Last Name", "User Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(healthAnalystTable);
        if (healthAnalystTable.getColumnModel().getColumnCount() > 0) {
            healthAnalystTable.getColumnModel().getColumn(0).setResizable(false);
            healthAnalystTable.getColumnModel().getColumn(1).setResizable(false);
            healthAnalystTable.getColumnModel().getColumn(2).setResizable(false);
            healthAnalystTable.getColumnModel().getColumn(3).setResizable(false);
        }

        searchLbl.setForeground(new java.awt.Color(0, 102, 102));
        searchLbl.setText("Enter First Name to search for Analyst:");

        searchTxt.setForeground(new java.awt.Color(0, 102, 102));

        searchBtn.setBackground(new java.awt.Color(153, 153, 153));
        searchBtn.setForeground(new java.awt.Color(0, 102, 102));
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        clearBtn.setBackground(new java.awt.Color(153, 153, 153));
        clearBtn.setForeground(new java.awt.Color(0, 102, 102));
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        deleteAnalystBtn.setBackground(new java.awt.Color(153, 153, 153));
        deleteAnalystBtn.setForeground(new java.awt.Color(0, 102, 102));
        deleteAnalystBtn.setText("Delete Analyst");
        deleteAnalystBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAnalystBtnActionPerformed(evt);
            }
        });

        viewDetailsBtn.setBackground(new java.awt.Color(153, 153, 153));
        viewDetailsBtn.setForeground(new java.awt.Color(0, 102, 102));
        viewDetailsBtn.setText("View Details");
        viewDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsBtnActionPerformed(evt);
            }
        });

        contactNoTxt.setForeground(new java.awt.Color(0, 102, 102));

        genderLbl.setForeground(new java.awt.Color(0, 102, 102));
        genderLbl.setText("Gender:");

        buttonGroup1.add(maleRadioBtn);
        maleRadioBtn.setForeground(new java.awt.Color(0, 102, 102));
        maleRadioBtn.setText("Male");

        firstNameLbl.setForeground(new java.awt.Color(0, 102, 102));
        firstNameLbl.setText("First Name:");

        firstNameTxt.setForeground(new java.awt.Color(0, 102, 102));

        lastNameLbl.setForeground(new java.awt.Color(0, 102, 102));
        lastNameLbl.setText("Last Name:");

        lastNameTxt.setForeground(new java.awt.Color(0, 102, 102));

        usernameLbl.setForeground(new java.awt.Color(0, 102, 102));
        usernameLbl.setText("User Name:");

        usernameTxt.setForeground(new java.awt.Color(0, 102, 102));

        contactNoLbl.setForeground(new java.awt.Color(0, 102, 102));
        contactNoLbl.setText("Contact No.:");

        pwdLbl.setForeground(new java.awt.Color(0, 102, 102));
        pwdLbl.setText("Password:");

        pwdTxt.setForeground(new java.awt.Color(0, 102, 102));

        buttonGroup1.add(femaleRadioBtn);
        femaleRadioBtn.setForeground(new java.awt.Color(0, 102, 102));
        femaleRadioBtn.setText("Female");

        addAnalystBtn.setBackground(new java.awt.Color(153, 153, 153));
        addAnalystBtn.setForeground(new java.awt.Color(0, 102, 102));
        addAnalystBtn.setText("Add Health Analyst");
        addAnalystBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAnalystBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(153, 153, 153));
        backBtn.setForeground(new java.awt.Color(0, 102, 102));
        backBtn.setText("<<  Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(titleLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(healthAnalysListtLbl))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(viewDetailsBtn)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(deleteAnalystBtn))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(searchLbl)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(searchBtn)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(clearBtn)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(genderLbl)
                                    .addComponent(contactNoLbl)
                                    .addComponent(lastNameLbl)
                                    .addComponent(firstNameLbl))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(maleRadioBtn)
                                    .addComponent(contactNoTxt)
                                    .addComponent(lastNameTxt)
                                    .addComponent(firstNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(femaleRadioBtn))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(usernameLbl)
                                    .addComponent(pwdLbl))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(usernameTxt)
                                    .addComponent(pwdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(281, 281, 281)
                                .addComponent(addAnalystBtn)
                                .addGap(46, 46, 46))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(backBtn)))
                .addGap(149, 149, 149))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(titleLbl)
                .addGap(90, 90, 90)
                .addComponent(healthAnalysListtLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchLbl)
                    .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn)
                    .addComponent(clearBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteAnalystBtn)
                    .addComponent(viewDetailsBtn))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(usernameLbl)
                                    .addComponent(usernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(38, 38, 38))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(pwdLbl)
                                .addComponent(pwdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(105, 105, 105))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstNameLbl)
                            .addComponent(firstNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lastNameLbl)
                            .addComponent(lastNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(contactNoLbl)
                            .addComponent(contactNoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genderLbl)
                            .addComponent(maleRadioBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(femaleRadioBtn)))
                .addGap(19, 19, 19)
                .addComponent(addAnalystBtn)
                .addGap(30, 30, 30)
                .addComponent(backBtn)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addAnalystBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAnalystBtnActionPerformed
        // TODO add your handling code here:
        
        if (validateInput()) {
            Person person = new Person();
            person.setFirstName(firstNameTxt.getText().trim());
            person.setLastName(lastNameTxt.getText().trim());
            person.setContactNo(contactNoTxt.getText().trim());
            
            healthOrg.getPersonDirectory().addPerson(person);

            if(maleRadioBtn.isSelected()) {
                person.setGender("Male");
            }
            else {
                person.setGender("Female");
            }

            UserAccount ua = healthOrg.getUserAccountDirectory().createUserAccount(usernameTxt.getText().trim(), String.valueOf(pwdTxt.getPassword()), person, new HealthAnalystRole());
                

            if (ua != null) {
                JOptionPane.showMessageDialog(null, "Health Analyst added successfully!", "information", JOptionPane.INFORMATION_MESSAGE);
                refresh(healthOrg.getUserAccountDirectory().getUserAccountDirectory());
            }
        }
        
    }//GEN-LAST:event_addAnalystBtnActionPerformed

    private void viewDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = healthAnalystTable.getSelectedRow();
        
        if (selectedRow >= 0) {
            UserAccount ua = (UserAccount) healthAnalystTable.getValueAt(selectedRow, 3);
            
            ViewHealthAnalystDetailsJPanel viewAnalystDetailPanel = new ViewHealthAnalystDetailsJPanel(userProcessContainer, healthOrg, ua, this);
            userProcessContainer.add("viewAnalystDetailPanel", viewAnalystDetailPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        else {
            JOptionPane.showMessageDialog(null, "Please select a row to view details!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_viewDetailsBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        String searchInput = searchTxt.getText().trim();

        if (!searchInput.isEmpty()) {
            ArrayList<UserAccount> uaList = healthOrg.getUserAccountDirectory().searchUserAccountByFname(searchInput);

            if (uaList.size() > 0) {
                populateAnalystTable(uaList);
            }
            else {
                JOptionPane.showMessageDialog(null, "No such analyst exists!", "Error", JOptionPane.ERROR_MESSAGE);
                refresh(healthOrg.getUserAccountDirectory().getUserAccountDirectory());
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Please enter First Name to perform Search!", "Warning", JOptionPane.WARNING_MESSAGE);
            searchTxt.requestFocus();
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void deleteAnalystBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAnalystBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = healthAnalystTable.getSelectedRow();
        
        if (selectedRow >= 0) {
            int confirmButton = JOptionPane.YES_NO_OPTION;
            
            int confirmDelete = JOptionPane.showConfirmDialog(null, "Would you like to delete selected store admin?", "Warning", confirmButton);
            
            if (confirmDelete == JOptionPane.YES_OPTION) {
                UserAccount ua = (UserAccount) healthAnalystTable.getValueAt(selectedRow, 4);
                
                healthOrg.getUserAccountDirectory().removeUserAccount(ua);
                healthOrg.getPersonDirectory().removePerson(ua.getPerson());
                
                refresh(healthOrg.getUserAccountDirectory().getUserAccountDirectory());
            }  
        }
        else {
            JOptionPane.showMessageDialog(null, "Please select a row to delete Health Analyst!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_deleteAnalystBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        refresh(healthOrg.getUserAccountDirectory().getUserAccountDirectory());
    }//GEN-LAST:event_clearBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    public boolean validateInput() {
        String fname = firstNameTxt.getText().trim();
        String lname = lastNameTxt.getText().trim();
        String cnum = contactNoTxt.getText().trim();
        String uname = usernameTxt.getText().trim();
        String pwd = String.valueOf(pwdTxt.getPassword());
        
        if (fname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter First Name!", "Error", JOptionPane.ERROR_MESSAGE);
            firstNameTxt.requestFocus();
            return false;
        }
        else if (lname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Last Name!", "Error", JOptionPane.ERROR_MESSAGE);
            lastNameTxt.requestFocus();
            return false;
        }
        else if (cnum.isEmpty() || !(cnum.matches("^[0-9]{10}"))) {
            JOptionPane.showMessageDialog(null, "Please enter 10 digits in Contact No.!", "Error", JOptionPane.ERROR_MESSAGE);
            contactNoTxt.requestFocus();
            return false;
        }
        else if (!maleRadioBtn.isSelected() && !femaleRadioBtn.isSelected()) {
            JOptionPane.showMessageDialog(null, "Please select Gender!", "Error", JOptionPane.ERROR_MESSAGE);
            maleRadioBtn.requestFocus();
            return false;
        }
        else if (uname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter User Name!", "Error", JOptionPane.ERROR_MESSAGE);
            usernameTxt.requestFocus();
            return false;
        }
        else if (HelperMethods.checkIfUserNameExists(uname, system)) {
            JOptionPane.showMessageDialog(null, "Username already exists!", "Error", JOptionPane.ERROR_MESSAGE);
            usernameTxt.requestFocus();
            return false;
        }
        else if (pwd.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Password!", "Error", JOptionPane.ERROR_MESSAGE);
            firstNameTxt.requestFocus();
            return false;
        }
        else {
            return true;
        }
    }
    
    public void refresh(ArrayList<UserAccount> uaList) {
        firstNameTxt.setText("");
        lastNameTxt.setText("");
        contactNoTxt.setText("");
        maleRadioBtn.setSelected(false);
        femaleRadioBtn.setSelected(false);
        usernameTxt.setText("");
        pwdTxt.setText("");
        searchTxt.setText("");
        
        populateAnalystTable(uaList);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAnalystBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clearBtn;
    private javax.swing.JLabel contactNoLbl;
    private javax.swing.JTextField contactNoTxt;
    private javax.swing.JButton deleteAnalystBtn;
    private javax.swing.JRadioButton femaleRadioBtn;
    private javax.swing.JLabel firstNameLbl;
    private javax.swing.JTextField firstNameTxt;
    private javax.swing.JLabel genderLbl;
    private javax.swing.JLabel healthAnalysListtLbl;
    private javax.swing.JTable healthAnalystTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastNameLbl;
    private javax.swing.JTextField lastNameTxt;
    private javax.swing.JRadioButton maleRadioBtn;
    private javax.swing.JLabel pwdLbl;
    private javax.swing.JPasswordField pwdTxt;
    private javax.swing.JButton searchBtn;
    private javax.swing.JLabel searchLbl;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JLabel usernameLbl;
    private javax.swing.JTextField usernameTxt;
    private javax.swing.JButton viewDetailsBtn;
    // End of variables declaration//GEN-END:variables
}
