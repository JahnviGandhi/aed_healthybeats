/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.userrole;

import business.HelperMethods;
import business.data.FoodConsumptionDetail;
import business.data.VitalSign;
import business.data.VitalSignHistory;
import business.organization.Organization;
import business.person.FamilyMember;
import business.useraccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JAHNVI
 */
public class ViewUnhealthyDaysJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Organization organization;
    private FamilyMember member;
    
    /**
     * Creates new form ViewUnHealthyDaysJPanel
     */
    public ViewUnhealthyDaysJPanel() {
        initComponents();
    }
    
    public ViewUnhealthyDaysJPanel(JPanel userProcessContainer, Organization organization, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.userAccount = userAccount;
        this.member = (FamilyMember) this.userAccount.getPerson();
        displayDetails();
    }

    public void displayDetails() {
        welcomeNameLbl.setText(welcomeNameLbl.getText().replace("<Name>", userAccount.getPerson().getFirstName() + " " + userAccount.getPerson().getLastName()));
        bindDateCombo();
    }
    
    public void populateVitalSign(String date) {
        DefaultTableModel dtm = (DefaultTableModel) vitalSignsTable.getModel();
        dtm.setRowCount(0);
        
        for (VitalSign vs : member.getVitalSignHistory().getVitalSignsForDate(date)) {
            if (!vs.isIsVitalSignNormal()) {
                Object row[] = new Object[10];
                row[0] = vs;
                row[1] = vs.getTemperature();
                row[2] = vs.getSystolicBp();
                row[3] = vs.getDiastolicBp();
                row[4] = vs.getPulse();
                row[5] = vs.getRespiratoryRate();
                row[6] = vs.getCholesterol();
                row[7] = vs.getBloodSugar();
                row[8] = vs.getBmi();
                row[9] = vs.getSensorName();
            
                dtm.addRow(row);
            }
        }
    }
    
    public void populateNutrients(String date) {
        DefaultTableModel dtm = (DefaultTableModel) foodConsumptionDetailsTable.getModel();
        dtm.setRowCount(0);
        
        for (FoodConsumptionDetail fcd : member.getFoodConsumptionHistory().getFoodConsumptionForDate(date)) {
            Object row[] = new Object[16];
            row[0] = fcd;
            row[1] = fcd.getEnergy();
            row[2] = fcd.getProtien();
            row[3] = fcd.getCarbohydrates();
            row[4] = fcd.getFat();
            row[5] = fcd.getFibers();
            row[6] = fcd.getSugar();
            row[7] = fcd.getSalt();
            row[8] = fcd.getIodine();
            row[9] = fcd.getVitaminA();
            row[10] = fcd.getVitaminB12();
            row[11] = fcd.getVitaminC();
            row[12] = fcd.getVitaminD();
            row[13] = fcd.getVitaminE();
            row[14] = fcd.getVitaminK();
            row[15] = fcd.getSensorName();
            
            dtm.addRow(row);
        }
    }
    
    public void bindDateCombo() {
        dateCombo.removeAllItems();
        
        VitalSignHistory vsh = new VitalSignHistory();
        
        for (VitalSign vs : member.getVitalSignHistory().getVitalSignHistory()) {
            if (!vs.isIsVitalSignNormal()) {
                vsh.getVitalSignHistory().add(vs);
            } 
        }
        
        ArrayList<String> timeStamps = HelperMethods.getListOfTimeStamp(vsh);
        ArrayList<String> dates = new ArrayList<>();
        for (String stamp : timeStamps) {
            String date = HelperMethods.getDateFromStamp(stamp);
            
            if (!dates.contains(date)) {
                dates.add(date);
            }
        }
        
        for (String date : dates) {
            dateCombo.addItem(date);
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateCombo = new javax.swing.JComboBox();
        vsLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vitalSignsTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        foodConsumptionDetailsTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();
        titleLbl = new javax.swing.JLabel();
        welcomeLbl = new javax.swing.JLabel();
        welcomeNameLbl = new javax.swing.JLabel();
        selectDateLbl = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));

        dateCombo.setForeground(new java.awt.Color(0, 102, 102));
        dateCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        dateCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateComboActionPerformed(evt);
            }
        });

        vsLbl.setText("Vital Signs:");

        jScrollPane1.setForeground(new java.awt.Color(0, 102, 102));

        vitalSignsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Time", "Temp.", "Sys. BP", "Dia. BP", "Pulse", "Resp. Rate", "Cholesterol", "BloodSugar", "BMI", "Sensor Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vitalSignsTable);

        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Consumed Nutrients:");

        jScrollPane2.setForeground(new java.awt.Color(0, 102, 102));

        foodConsumptionDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Time", "Energy", "Protein", "Carbo.", "Fat", "Fibers", "Sugar", "Salt", "Iodine", "Vit A", "Vit B12", "Vit C", "Vit D", "Vit E", "Vit K", "Sensor Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(foodConsumptionDetailsTable);

        backBtn.setBackground(new java.awt.Color(153, 153, 153));
        backBtn.setForeground(new java.awt.Color(0, 102, 102));
        backBtn.setText("<<  Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        titleLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titleLbl.setForeground(new java.awt.Color(0, 102, 102));
        titleLbl.setText("User - View Unhealthy Days");

        welcomeLbl.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        welcomeLbl.setForeground(new java.awt.Color(0, 102, 102));
        welcomeLbl.setText("Welcome,");

        welcomeNameLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        welcomeNameLbl.setForeground(new java.awt.Color(0, 102, 102));
        welcomeNameLbl.setText("<Name>!");

        selectDateLbl.setForeground(new java.awt.Color(0, 102, 102));
        selectDateLbl.setText("Select a day:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(welcomeLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(welcomeNameLbl)
                .addGap(145, 145, 145))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(selectDateLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(vsLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(backBtn)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(202, 202, 202)
                .addComponent(titleLbl)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(titleLbl)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(welcomeLbl)
                    .addComponent(welcomeNameLbl))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectDateLbl)
                    .addComponent(dateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(vsLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(backBtn)
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void dateComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateComboActionPerformed
        // TODO add your handling code here:
        String date = (String) dateCombo.getSelectedItem();

        if (date != null) {
            populateVitalSign(date);
            populateNutrients(date);
        }
    }//GEN-LAST:event_dateComboActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JComboBox dateCombo;
    private javax.swing.JTable foodConsumptionDetailsTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel selectDateLbl;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JTable vitalSignsTable;
    private javax.swing.JLabel vsLbl;
    private javax.swing.JLabel welcomeLbl;
    private javax.swing.JLabel welcomeNameLbl;
    // End of variables declaration//GEN-END:variables
}
