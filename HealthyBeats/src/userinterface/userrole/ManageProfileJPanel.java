/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.userrole;

import business.HelperMethods;
import business.household.HouseHold;
import business.organization.HouseHoldOrganization;
import business.person.FamilyMember;
import business.useraccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author JAHNVI
 */
public class ManageProfileJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private HouseHoldOrganization houseOrg;
    private UserAccount userAccount;
    private FamilyMember member;
    private HouseHold house;
    
    /**
     * Creates new form ManageProfileJPanel
     */
    public ManageProfileJPanel() {
        initComponents();
    }

    public ManageProfileJPanel(JPanel userProceeContainer, HouseHoldOrganization houseOrg, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProceeContainer;
        this.houseOrg = houseOrg;
        this.userAccount = userAccount;
        this.member = (FamilyMember) userAccount.getPerson();
        this.house = HelperMethods.getHouseHoldById(member.getHouseHoldId(), houseOrg.getHouseHoldDirectory());
        displayDetails();
    }
    
    public void displayDetails() {
        houseHoldIdDisplayLbl.setText(String.valueOf(house.getHouseHoldId()));
        houseHoldNameDisplayLbl.setText(String.valueOf(house.getHouseHoldName()));
        
        fnameTxt.setText(member.getFirstName());
        lnameTxt.setText(member.getLastName());
        dobTxt.setText(member.getDob());
        contactTxt.setText(member.getContactNo());
        
        if (maleRadioBtn.isSelected()) {
            maleRadioBtn.setSelected(true);
        }
        else {
            femaleRadioBtn.setSelected(true);
        }
        
        if (house.getHeadOfTheFamily() == member.getPersonId()) {
            headCheckBox.setSelected(true);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLbl = new javax.swing.JLabel();
        lnameLbl = new javax.swing.JLabel();
        lnameTxt = new javax.swing.JTextField();
        headCheckBox = new javax.swing.JCheckBox();
        dobLbl = new javax.swing.JLabel();
        houseHoldId = new javax.swing.JLabel();
        dobTxt = new javax.swing.JTextField();
        houseHoldIdDisplayLbl = new javax.swing.JLabel();
        dobFormatLbl = new javax.swing.JLabel();
        houseHoldNameLbl = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        contactLbl = new javax.swing.JLabel();
        houseHoldNameDisplayLbl = new javax.swing.JLabel();
        contactTxt = new javax.swing.JTextField();
        genderLbl = new javax.swing.JLabel();
        maleRadioBtn = new javax.swing.JRadioButton();
        fnameLbl = new javax.swing.JLabel();
        femaleRadioBtn = new javax.swing.JRadioButton();
        fnameTxt = new javax.swing.JTextField();
        backBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));

        titleLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titleLbl.setForeground(new java.awt.Color(0, 102, 102));
        titleLbl.setText("User - Manage Profile");

        lnameLbl.setForeground(new java.awt.Color(0, 102, 102));
        lnameLbl.setText("Last Name:");

        lnameTxt.setForeground(new java.awt.Color(0, 102, 102));
        lnameTxt.setEnabled(false);

        headCheckBox.setForeground(new java.awt.Color(0, 102, 102));
        headCheckBox.setText("Is Head of the Family?");
        headCheckBox.setEnabled(false);

        dobLbl.setForeground(new java.awt.Color(0, 102, 102));
        dobLbl.setText("Date of Birth:");

        houseHoldId.setForeground(new java.awt.Color(0, 102, 102));
        houseHoldId.setText("House Hold Id:");

        dobTxt.setForeground(new java.awt.Color(0, 102, 102));
        dobTxt.setEnabled(false);

        houseHoldIdDisplayLbl.setForeground(new java.awt.Color(0, 102, 102));
        houseHoldIdDisplayLbl.setText("<House Hold Id>");
        houseHoldIdDisplayLbl.setEnabled(false);

        dobFormatLbl.setForeground(new java.awt.Color(0, 102, 102));
        dobFormatLbl.setText("(MM/DD/YYYY)");

        houseHoldNameLbl.setForeground(new java.awt.Color(0, 102, 102));
        houseHoldNameLbl.setText("House Hold Name:");

        saveBtn.setBackground(new java.awt.Color(153, 153, 153));
        saveBtn.setForeground(new java.awt.Color(0, 102, 102));
        saveBtn.setText("Save");
        saveBtn.setEnabled(false);
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(153, 153, 153));
        updateBtn.setForeground(new java.awt.Color(0, 102, 102));
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        contactLbl.setForeground(new java.awt.Color(0, 102, 102));
        contactLbl.setText("Contact No.:");

        houseHoldNameDisplayLbl.setForeground(new java.awt.Color(0, 102, 102));
        houseHoldNameDisplayLbl.setText("<House Hold Name>");
        houseHoldNameDisplayLbl.setEnabled(false);

        contactTxt.setForeground(new java.awt.Color(0, 102, 102));
        contactTxt.setEnabled(false);

        genderLbl.setForeground(new java.awt.Color(0, 102, 102));
        genderLbl.setText("Gender:");

        maleRadioBtn.setForeground(new java.awt.Color(0, 102, 102));
        maleRadioBtn.setText("Male");
        maleRadioBtn.setEnabled(false);

        fnameLbl.setForeground(new java.awt.Color(0, 102, 102));
        fnameLbl.setText("First Name:");

        femaleRadioBtn.setForeground(new java.awt.Color(0, 102, 102));
        femaleRadioBtn.setText("Female");
        femaleRadioBtn.setEnabled(false);

        fnameTxt.setForeground(new java.awt.Color(0, 102, 102));
        fnameTxt.setEnabled(false);

        backBtn.setBackground(new java.awt.Color(153, 153, 153));
        backBtn.setForeground(new java.awt.Color(0, 102, 102));
        backBtn.setText("<<  Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(genderLbl)
                            .addComponent(houseHoldNameLbl)
                            .addComponent(houseHoldId)
                            .addComponent(fnameLbl)
                            .addComponent(lnameLbl)
                            .addComponent(dobLbl)
                            .addComponent(contactLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dobTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dobFormatLbl)
                                .addGap(0, 138, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(houseHoldIdDisplayLbl)
                                    .addComponent(contactTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(houseHoldNameDisplayLbl)
                                    .addComponent(fnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(maleRadioBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(femaleRadioBtn)))
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(saveBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateBtn)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(headCheckBox)
                .addGap(218, 218, 218))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(titleLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(backBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(titleLbl)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(houseHoldId)
                    .addComponent(houseHoldIdDisplayLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(houseHoldNameDisplayLbl)
                    .addComponent(houseHoldNameLbl))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fnameLbl)
                    .addComponent(fnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lnameLbl)
                    .addComponent(lnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dobTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dobLbl)
                    .addComponent(dobFormatLbl))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contactTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contactLbl))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genderLbl)
                    .addComponent(maleRadioBtn)
                    .addComponent(femaleRadioBtn))
                .addGap(18, 18, 18)
                .addComponent(headCheckBox)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateBtn)
                    .addComponent(saveBtn))
                .addGap(78, 78, 78)
                .addComponent(backBtn)
                .addGap(29, 29, 29))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
        if (validateInput()) {
            member.setFirstName(fnameTxt.getText().trim());
            member.setLastName(lnameTxt.getText().trim());
            member.setDob(dobTxt.getText().trim());
            member.setContactNo(contactTxt.getText().trim());

            if (maleRadioBtn.isSelected()) {
                member.setGender("Male");
            }
            else {
                member.setGender("Female");
            }

            if (house.getHeadOfTheFamily() == 0 && headCheckBox.isSelected()) {
                house.setHeadOfTheFamily(member.getPersonId());
            }
            else if (house.getHeadOfTheFamily() == member.getPersonId() && !headCheckBox.isSelected()) {
                house.setHeadOfTheFamily(0);
            }

            JOptionPane.showMessageDialog(null, "Family Member details updated successfully!");
            fnameTxt.setEnabled(false);
            lnameTxt.setEnabled(false);
            contactTxt.setEnabled(false);
            dobTxt.setEnabled(false);

            headCheckBox.setEnabled(false);

            maleRadioBtn.setEnabled(false);
            femaleRadioBtn.setEnabled(false);

            saveBtn.setEnabled(false);
            updateBtn.setEnabled(true);
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        fnameTxt.setEnabled(true);
        lnameTxt.setEnabled(true);
        contactTxt.setEnabled(true);
        dobTxt.setEnabled(true);

        if (headCheckBox.isSelected()) {
            headCheckBox.setEnabled(true);
        }

        maleRadioBtn.setEnabled(true);
        femaleRadioBtn.setEnabled(true);

        saveBtn.setEnabled(true);
        updateBtn.setEnabled(false);
    }//GEN-LAST:event_updateBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    public boolean validateInput() {
        String fname = fnameTxt.getText().trim();
        String lname = lnameTxt.getText().trim();
        String dob = dobTxt.getText().trim();
        String cnum = contactTxt.getText().trim();
        
        if (fname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter First Name!", "Error", JOptionPane.ERROR_MESSAGE);
            fnameTxt.requestFocus();
            return false;
        }
        else if (lname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Last Name!", "Error", JOptionPane.ERROR_MESSAGE);
            lnameTxt.requestFocus();
            return false;
        }
        else if (dob.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Date of Birth!", "Error", JOptionPane.ERROR_MESSAGE);
            dobTxt.requestFocus();
            return false;
        }
        else if (dob.matches("([0-9]{2})/([0-9]{2})/([0-9]{4})")) {
            JOptionPane.showMessageDialog(null, "Please enter Date of Birth in MM/DD/YYYY format!", "Error", JOptionPane.ERROR_MESSAGE);
            dobTxt.requestFocus();
            return false;
        }
        else if (cnum.isEmpty() || !(cnum.matches("^[0-9]{10}"))) {
            JOptionPane.showMessageDialog(null, "Please enter 10 digits in Contact No.!", "Error", JOptionPane.ERROR_MESSAGE);
            contactTxt.requestFocus();
            return false;
        }
        else if (!maleRadioBtn.isSelected() && !femaleRadioBtn.isSelected()) {
            JOptionPane.showMessageDialog(null, "Please select Gender!", "Error", JOptionPane.ERROR_MESSAGE);
            maleRadioBtn.requestFocus();
            return false;
        }
        else {
            return true;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel contactLbl;
    private javax.swing.JTextField contactTxt;
    private javax.swing.JLabel dobFormatLbl;
    private javax.swing.JLabel dobLbl;
    private javax.swing.JTextField dobTxt;
    private javax.swing.JRadioButton femaleRadioBtn;
    private javax.swing.JLabel fnameLbl;
    private javax.swing.JTextField fnameTxt;
    private javax.swing.JLabel genderLbl;
    private javax.swing.JCheckBox headCheckBox;
    private javax.swing.JLabel houseHoldId;
    private javax.swing.JLabel houseHoldIdDisplayLbl;
    private javax.swing.JLabel houseHoldNameDisplayLbl;
    private javax.swing.JLabel houseHoldNameLbl;
    private javax.swing.JLabel lnameLbl;
    private javax.swing.JTextField lnameTxt;
    private javax.swing.JRadioButton maleRadioBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
